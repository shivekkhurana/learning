// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elenhos.proto

package com.elenhos;

public final class ElenhosData {
  private ElenhosData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public enum MsgType
      implements com.google.protobuf.Internal.EnumLite {
    MAG(0, 0),
    ACCEL(1, 1),
    TOUCH(2, 2),
    BUTTON(3, 3),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static MsgType valueOf(int value) {
      switch (value) {
        case 0: return MAG;
        case 1: return ACCEL;
        case 2: return TOUCH;
        case 3: return BUTTON;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {
            public MsgType findValueByNumber(int number) {
              return MsgType.valueOf(number)
    ;        }
          };
    
    private final int index;
    private final int value;
    private MsgType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:elenhosdata.MsgType)
  }
  
  public static final class PhoneEvent extends
      com.google.protobuf.GeneratedMessageLite {
    // Use PhoneEvent.newBuilder() to construct.
    private PhoneEvent() {
      initFields();
    }
    private PhoneEvent(boolean noInit) {}
    
    private static final PhoneEvent defaultInstance;
    public static PhoneEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhoneEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required .elenhosdata.MsgType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private com.elenhos.ElenhosData.MsgType type_;
    public boolean hasType() { return hasType; }
    public com.elenhos.ElenhosData.MsgType getType() { return type_; }
    
    // optional float x = 2;
    public static final int X_FIELD_NUMBER = 2;
    private boolean hasX;
    private float x_ = 0F;
    public boolean hasX() { return hasX; }
    public float getX() { return x_; }
    
    // optional float y = 3;
    public static final int Y_FIELD_NUMBER = 3;
    private boolean hasY;
    private float y_ = 0F;
    public boolean hasY() { return hasY; }
    public float getY() { return y_; }
    
    // optional float z = 4;
    public static final int Z_FIELD_NUMBER = 4;
    private boolean hasZ;
    private float z_ = 0F;
    public boolean hasZ() { return hasZ; }
    public float getZ() { return z_; }
    
    // optional int32 xx = 5;
    public static final int XX_FIELD_NUMBER = 5;
    private boolean hasXx;
    private int xx_ = 0;
    public boolean hasXx() { return hasXx; }
    public int getXx() { return xx_; }
    
    // optional int32 yy = 6;
    public static final int YY_FIELD_NUMBER = 6;
    private boolean hasYy;
    private int yy_ = 0;
    public boolean hasYy() { return hasYy; }
    public int getYy() { return yy_; }
    
    // optional int32 buttontype = 7;
    public static final int BUTTONTYPE_FIELD_NUMBER = 7;
    private boolean hasButtontype;
    private int buttontype_ = 0;
    public boolean hasButtontype() { return hasButtontype; }
    public int getButtontype() { return buttontype_; }
    
    // optional bool state = 8;
    public static final int STATE_FIELD_NUMBER = 8;
    private boolean hasState;
    private boolean state_ = false;
    public boolean hasState() { return hasState; }
    public boolean getState() { return state_; }
    
    private void initFields() {
      type_ = com.elenhos.ElenhosData.MsgType.MAG;
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasX()) {
        output.writeFloat(2, getX());
      }
      if (hasY()) {
        output.writeFloat(3, getY());
      }
      if (hasZ()) {
        output.writeFloat(4, getZ());
      }
      if (hasXx()) {
        output.writeInt32(5, getXx());
      }
      if (hasYy()) {
        output.writeInt32(6, getYy());
      }
      if (hasButtontype()) {
        output.writeInt32(7, getButtontype());
      }
      if (hasState()) {
        output.writeBool(8, getState());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasX()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, getX());
      }
      if (hasY()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, getY());
      }
      if (hasZ()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, getZ());
      }
      if (hasXx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getXx());
      }
      if (hasYy()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getYy());
      }
      if (hasButtontype()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getButtontype());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getState());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elenhos.ElenhosData.PhoneEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elenhos.ElenhosData.PhoneEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.elenhos.ElenhosData.PhoneEvent, Builder> {
      private com.elenhos.ElenhosData.PhoneEvent result;
      
      // Construct using com.elenhos.ElenhosData.PhoneEvent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.elenhos.ElenhosData.PhoneEvent();
        return builder;
      }
      
      protected com.elenhos.ElenhosData.PhoneEvent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.elenhos.ElenhosData.PhoneEvent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.elenhos.ElenhosData.PhoneEvent getDefaultInstanceForType() {
        return com.elenhos.ElenhosData.PhoneEvent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.elenhos.ElenhosData.PhoneEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.elenhos.ElenhosData.PhoneEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.elenhos.ElenhosData.PhoneEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.elenhos.ElenhosData.PhoneEvent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.elenhos.ElenhosData.PhoneEvent other) {
        if (other == com.elenhos.ElenhosData.PhoneEvent.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasXx()) {
          setXx(other.getXx());
        }
        if (other.hasYy()) {
          setYy(other.getYy());
        }
        if (other.hasButtontype()) {
          setButtontype(other.getButtontype());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.elenhos.ElenhosData.MsgType value = com.elenhos.ElenhosData.MsgType.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 21: {
              setX(input.readFloat());
              break;
            }
            case 29: {
              setY(input.readFloat());
              break;
            }
            case 37: {
              setZ(input.readFloat());
              break;
            }
            case 40: {
              setXx(input.readInt32());
              break;
            }
            case 48: {
              setYy(input.readInt32());
              break;
            }
            case 56: {
              setButtontype(input.readInt32());
              break;
            }
            case 64: {
              setState(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required .elenhosdata.MsgType type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public com.elenhos.ElenhosData.MsgType getType() {
        return result.getType();
      }
      public Builder setType(com.elenhos.ElenhosData.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.elenhos.ElenhosData.MsgType.MAG;
        return this;
      }
      
      // optional float x = 2;
      public boolean hasX() {
        return result.hasX();
      }
      public float getX() {
        return result.getX();
      }
      public Builder setX(float value) {
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder clearX() {
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      // optional float y = 3;
      public boolean hasY() {
        return result.hasY();
      }
      public float getY() {
        return result.getY();
      }
      public Builder setY(float value) {
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder clearY() {
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      // optional float z = 4;
      public boolean hasZ() {
        return result.hasZ();
      }
      public float getZ() {
        return result.getZ();
      }
      public Builder setZ(float value) {
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder clearZ() {
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
      
      // optional int32 xx = 5;
      public boolean hasXx() {
        return result.hasXx();
      }
      public int getXx() {
        return result.getXx();
      }
      public Builder setXx(int value) {
        result.hasXx = true;
        result.xx_ = value;
        return this;
      }
      public Builder clearXx() {
        result.hasXx = false;
        result.xx_ = 0;
        return this;
      }
      
      // optional int32 yy = 6;
      public boolean hasYy() {
        return result.hasYy();
      }
      public int getYy() {
        return result.getYy();
      }
      public Builder setYy(int value) {
        result.hasYy = true;
        result.yy_ = value;
        return this;
      }
      public Builder clearYy() {
        result.hasYy = false;
        result.yy_ = 0;
        return this;
      }
      
      // optional int32 buttontype = 7;
      public boolean hasButtontype() {
        return result.hasButtontype();
      }
      public int getButtontype() {
        return result.getButtontype();
      }
      public Builder setButtontype(int value) {
        result.hasButtontype = true;
        result.buttontype_ = value;
        return this;
      }
      public Builder clearButtontype() {
        result.hasButtontype = false;
        result.buttontype_ = 0;
        return this;
      }
      
      // optional bool state = 8;
      public boolean hasState() {
        return result.hasState();
      }
      public boolean getState() {
        return result.getState();
      }
      public Builder setState(boolean value) {
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:elenhosdata.PhoneEvent)
    }
    
    static {
      defaultInstance = new PhoneEvent(true);
      com.elenhos.ElenhosData.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:elenhosdata.PhoneEvent)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
